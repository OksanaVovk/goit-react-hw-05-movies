{"version":3,"file":"static/js/259.4b7c1f01.chunk.js","mappings":"oOAiBA,EAjBoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACrB,OAAwB,IAApBA,EAASC,QACJ,sEAGL,wBACGD,EAASE,KAAI,SAAAC,GAAG,OACf,2BACE,wBAAKA,EAAIC,UACT,uBAAID,EAAIE,YAFDF,EAAIG,UCqBvB,EAvBgB,WACd,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IAGFG,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJN,EAAgBM,EAAOC,YAExBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAE/B,CAACR,KAGF,8BACE,SAAC,EAAD,CAAaV,SAAUQ,Q,oLCvBhBa,EAAU,mCAEhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,gEACgEF,GADhE,SAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCN,EADD,4DAC4DF,EAD5D,4DACuHQ,GADvH,SAEkBL,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpB,GAA/B,kFACCa,EADD,6CAC6Cb,EAD7C,oBACgEW,EADhE,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BrB,GAA1B,kFACCa,EADD,6CAC6Cb,EAD7C,4BACwEW,EADxE,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACCa,EADD,6CAC6Cb,EAD7C,4BACwEW,EADxE,mCAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF","sources":["components/ReviewsList.jsx","components/Reviews.jsx","fetchFilms.js"],"sourcesContent":["const ReviewsList = ({ revArrey }) => {\n  if (revArrey.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  } else {\n    return (\n      <ul>\n        {revArrey.map(rev => (\n          <li key={rev.id}>\n            <h3>{rev.author}</h3>\n            <p>{rev.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default ReviewsList;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReviews } from 'fetchFilms';\nimport ReviewsList from './ReviewsList';\n\nconst Reviews = () => {\n  const [reviewsArrey, setReviewsArrey] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    } else {\n      fetchReviews(movieId)\n        .then(review => {\n          setReviewsArrey(review.results);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [movieId]);\n\n  return (\n    <section>\n      <ReviewsList revArrey={reviewsArrey} />\n    </section>\n  );\n};\n\nexport default Reviews;\n","export const KEY_API = '024bf82d4805f650033dc69997860333';\n\nexport async function fetchPopularFilms() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY_API}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchSearchFilms(searchWord) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY_API}&language=en-US&page=1&include_adult=false&query=${searchWord}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchDetailFilm(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchCasts(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n"],"names":["revArrey","length","map","rev","author","content","id","useState","reviewsArrey","setReviewsArrey","movieId","useParams","useEffect","fetchReviews","then","review","results","catch","error","console","log","KEY_API","fetchPopularFilms","url","fetch","response","json","movie","fetchSearchFilms","searchWord","fetchDetailFilm","fetchCasts"],"sourceRoot":""}