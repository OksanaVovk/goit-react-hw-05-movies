{"version":3,"file":"static/js/486.c9ac5af1.chunk.js","mappings":"6PACaA,EAAOC,EAAAA,GAAAA,GAAH,+KASJC,EAAOD,EAAAA,GAAAA,GAAH,iJAQJE,EAAMF,EAAAA,GAAAA,IAAH,8DAKHG,EAAOH,EAAAA,GAAAA,EAAH,8D,SCQjB,EA5BiB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACZC,EAAeC,EACrB,OAAsB,IAAlBF,EAAOG,QACF,kFAGL,SAACR,EAAD,UACGK,EAAOI,KAAI,SAAAC,GAAI,OACd,UAACR,EAAD,YACE,SAACC,EAAD,CACEQ,IACwB,OAAtBD,EAAKE,aAAL,yCACsCF,EAAKE,cACvCN,EAENO,IAAI,MAEN,SAACT,EAAD,UAAOM,EAAKI,iBACZ,UAACV,EAAD,0BACa,0BAAOM,EAAKK,iBAXhBL,EAAKM,UCgB1B,EAtBa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IAGFG,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJN,EAAaM,EAAOf,SAErBgB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAE/B,CAACP,KAGF,8BACE,SAAC,EAAD,CAAUf,OAAQa,Q,oLCvBXY,EAAU,mCAEhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,gEACgEF,GADhE,SAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCN,EADD,4DAC4DF,EAD5D,4DACuHQ,GADvH,SAEkBL,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,kFACCY,EADD,6CAC6CZ,EAD7C,oBACgEU,EADhE,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,kFACCY,EADD,6CAC6CZ,EAD7C,4BACwEU,EADxE,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BpB,GAA5B,kFACCY,EADD,6CAC6CZ,EAD7C,4BACwEU,EADxE,mCAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGCC,EAHD,yBAIEA,GAJF,oE","sources":["components/CastList-styled.js","components/CastList.jsx","components/Cast.jsx","fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  border-bottom: 1px solid black;\n  font-size: 18px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  padding-bottom: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n  margin-top: 20px;\n`;\n\nexport const Text = styled.p`\n  margin: 0px;\n  font-weight: bold;\n`;\n","import defaultPhoto from './default.png';\nimport { List, Item, Img, Text } from './CastList-styled';\n\nconst CastList = ({ castAr }) => {\n  const defaultImage = defaultPhoto;\n  if (castAr.length === 0) {\n    return <p>We don't have any information for cast of this movie.</p>;\n  } else {\n    return (\n      <List>\n        {castAr.map(cast => (\n          <Item key={cast.id}>\n            <Img\n              src={\n                cast.profile_path !== null\n                  ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                  : defaultImage\n              }\n              alt=\"\"\n            ></Img>\n            <Text>{cast.original_name}</Text>\n            <Text>\n              Character: <span>{cast.character}</span>\n            </Text>\n          </Item>\n        ))}\n      </List>\n    );\n  }\n};\n\nexport default CastList;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCasts } from 'fetchFilms';\nimport CastList from './CastList';\n\nconst Cast = () => {\n  const [castArrey, setCastArrey] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    } else {\n      fetchCasts(movieId)\n        .then(actors => {\n          setCastArrey(actors.cast);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [movieId]);\n\n  return (\n    <section>\n      <CastList castAr={castArrey} />\n    </section>\n  );\n};\nexport default Cast;\n","export const KEY_API = '024bf82d4805f650033dc69997860333';\n\nexport async function fetchPopularFilms() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY_API}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchSearchFilms(searchWord) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY_API}&language=en-US&page=1&include_adult=false&query=${searchWord}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchDetailFilm(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchCasts(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n"],"names":["List","styled","Item","Img","Text","castAr","defaultImage","defaultPhoto","length","map","cast","src","profile_path","alt","original_name","character","id","useState","castArrey","setCastArrey","movieId","useParams","useEffect","fetchCasts","then","actors","catch","error","console","log","KEY_API","fetchPopularFilms","url","fetch","response","json","movie","fetchSearchFilms","searchWord","fetchDetailFilm","fetchReviews"],"sourceRoot":""}